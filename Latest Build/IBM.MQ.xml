<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>IBM.MQ</ID>
      <Version>3.2.0.42</Version>
    </Identity>
    <Name>IBM.MQ</Name>
    <References>
      <Reference Alias="SCDW">
        <ID>Microsoft.SystemCenter.DataWarehouse.Library</ID>
        <Version>7.1.10226.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Performance">
        <ID>System.Performance.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="IBM.MQ.Channel" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false">
          <Property ID="ChannelName" Type="string" Key="true" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="QueueManagerName" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="CHLTYPE" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="BATCHSZ" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="DESCR" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="MAXMSGL" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="NPMSPEED" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="SSLCAUTH" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="TRPTYPE" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="USEDLQ" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
        </ClassType>
        <ClassType ID="IBM.MQ.Listener" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false">
          <Property ID="ListenerName" Type="string" Key="true" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="QueueManagerName" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="TRPTYPE" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="CONTROL" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="PORT" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="DESCR" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="IPADDR" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
        </ClassType>
        <ClassType ID="IBM.MQ.Queue" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false">
          <Property ID="QueueName" Type="string" Key="true" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="QueueManagerName" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="TYPE" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="DESCR" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="MAXDEPTH" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
          <Property ID="MAXMSGL" Type="string" Key="false" CaseSensitive="false" MinLength="0" MaxLength="256" />
        </ClassType>
        <ClassType ID="IBM.MQ.QueueManager" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false">
          <Property ID="QueueManagerName" Type="string" Key="true" CaseSensitive="false" MinLength="0" MaxLength="256" />
        </ClassType>
        <ClassType ID="IBM.MQ.Server" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false" />
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="IBM.MQ.QueueManagerHostingChannel" Accessibility="Internal" Abstract="false" Base="System!System.Hosting">
          <Source ID="Source" Type="IBM.MQ.QueueManager" />
          <Target ID="Target" Type="IBM.MQ.Channel" />
        </RelationshipType>
        <RelationshipType ID="IBM.MQ.QueueManagerHostingListener" Accessibility="Internal" Abstract="false" Base="System!System.Hosting">
          <Source ID="Source" Type="IBM.MQ.QueueManager" />
          <Target ID="Target" Type="IBM.MQ.Listener" />
        </RelationshipType>
        <RelationshipType ID="IBM.MQ.QueueManagerHostingQueue" Accessibility="Internal" Abstract="false" Base="System!System.Hosting">
          <Source ID="Source" Type="IBM.MQ.QueueManager" />
          <Target ID="Target" Type="IBM.MQ.Queue" />
        </RelationshipType>
        <RelationshipType ID="IBM.MQ.ServerHostingQueueManager" Accessibility="Internal" Abstract="false" Base="System!System.Hosting">
          <Source ID="Source" Type="IBM.MQ.Server" />
          <Target ID="Target" Type="IBM.MQ.QueueManager" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="IBM.MQ.Queue.PerformanceDataMapper" Accessibility="Public">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element name="QueueManager" type="NonNullString" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="QueueName" type="xsd:string" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="DisplayParameter" type="NonNullString" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="PropertyBag" TypeID="IBM.MQ.Queue.TimedPerfPropertyBag">
                <QueueManager>$Config/QueueManager$</QueueManager>
                <QueueName>$Config/QueueName$</QueueName>
                <DisplayParameter>$Config/DisplayParameter$</DisplayParameter>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ConditionDetection ID="DataMapper" TypeID="Performance!System.Performance.DataGenericMapper">
                <ObjectName>$Config/QueueManager$</ObjectName>
                <CounterName>$Config/DisplayParameter$</CounterName>
                <InstanceName>$Config/QueueName$</InstanceName>
                <Value>$Data/Property[@Name='Value']$</Value>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="DataMapper">
                <Node ID="PropertyBag" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>Performance!System.Performance.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="IBM.MQ.Queue.TimedPerfPropertyBag" Accessibility="Public">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element name="QueueManager" type="NonNullString" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="QueueName" type="xsd:string" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="DisplayParameter" type="NonNullString" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="PropertyBag" TypeID="IBM.MQ.Queue.PerfPB.ProbeAction">
                <QueueManager>$Config/QueueManager$</QueueManager>
                <DisplayParameter>$Config/DisplayParameter$</DisplayParameter>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
              <ConditionDetection ID="PBfilter" TypeID="System!System.ExpressionFilter" Comment="Cookdown enabling filter">
                <Expression>
                  <And>
                    <Expression>
                      <SimpleExpression>
                        <ValueExpression>
                          <Value Type="String">$Config/QueueName$</Value>
                        </ValueExpression>
                        <Operator>Equal</Operator>
                        <ValueExpression>
                          <XPathQuery Type="String">Property[@Name='Instance']</XPathQuery>
                        </ValueExpression>
                      </SimpleExpression>
                    </Expression>
                    <Expression>
                      <SimpleExpression>
                        <ValueExpression>
                          <Value Type="String">$Config/QueueManager$</Value>
                        </ValueExpression>
                        <Operator>Equal</Operator>
                        <ValueExpression>
                          <XPathQuery Type="String">Property[@Name='Object']</XPathQuery>
                        </ValueExpression>
                      </SimpleExpression>
                    </Expression>
                    <Expression>
                      <SimpleExpression>
                        <ValueExpression>
                          <Value Type="String">$Config/DisplayParameter$</Value>
                        </ValueExpression>
                        <Operator>Equal</Operator>
                        <ValueExpression>
                          <XPathQuery Type="String">Property[@Name='Counter']</XPathQuery>
                        </ValueExpression>
                      </SimpleExpression>
                    </Expression>
                  </And>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="PBfilter">
                <Node ID="PropertyBag">
                  <Node ID="Scheduler" />
                </Node>
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="IBM.MQ.Queue.PerfPB.ProbeAction" Accessibility="Internal">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element name="QueueManager" type="NonNullString" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="DisplayParameter" type="xsd:string" minOccurs="0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <ProbeAction ID="Script" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>Get-MQQueuePerfPB.ps1</ScriptName>
                <ScriptBody><![CDATA[[CmdletBinding()]
Param (
	[Parameter(Mandatory=$true)]
	[string] $QueueManager,
	#[string] $QueueName,
	[string] $DisplayParameter
)

function Get-MQPerfdataFromCmd ($CommandResult, $DisplayParameter)
{
	$CommandResult -match "$DisplayParameter\((.*)\)" | Out-Null
	if ($matches -ne $null) {
	if ($matches.count -gt 1) {
		$perfResult = $matches[1] -as [double]
		if ($perfResult) {
			return $perfResult
		} else {
			return $null
		}
	}}
}

function Invoke-MQDisplayQueue
{
	[CmdletBinding()]
	Param (
		[Parameter(Mandatory=$true)]
		[string]$QueueName,
		[Parameter(Mandatory=$true)]
		[string]$QueueManager,
		[Parameter(Mandatory=$true)]
		[string]$DisplayParameter
	)
	$commandString = "cmd"
	$commandArguments = "/c echo Display Queue($QueueName) $DisplayParameter | runmqsc $QueueManager"

	[string]$commandResult = & $commandString $commandArguments
	return $commandResult
}

function Get-MQQueueNames
{
	[CmdletBinding()]
	Param
	(
		[Parameter(Mandatory=$true)]
		[string]$QueueManager
	)
	$commandString = "cmd"
	$commandArguments = "/c echo Display QL(*) | runmqsc $QueueManager"
	[string] $qlResult = & $commandString $commandArguments

	$queueSearch = Select-String -InputObject $qlResult -Pattern "QUEUE\((.*?)\)" -AllMatches
	$queueNames = New-Object -TypeName System.Collections.ArrayList
	foreach ($match in $queueSearch.Matches.Groups)
	{
		if ($match.Groups) {
			[string]$queueName = $match.Groups[1].Value
			$queueName = $queueName.Trim()
			$queueNames.Add($queueName) | Out-Null
		}
	}

	return $queueNames
}

function Write-DebugLog ($Message) {
	if ($MyInvocation.ScriptName.Length -gt 0) {
		$scriptName = $MyInvocation.ScriptName
		$scriptName = $scriptName.Substring($scriptName.LastIndexOf("\")+1,$scriptName.LastIndexOf(".") - $scriptName.LastIndexOf("\")-1)
	}
	else {
		$scriptName = $PID
	}
	$logFilePath = ("{0}\{2}_{1}.log" -f "C:\Windows\Temp",$(Get-Date -Format yyyyMMdd),$scriptName)
	$Message = "{0}`t{1}`t{3}`t{2}" -f $(Get-Date -Format o),$PID,$Message,$env:USERNAME
	Out-File -LiteralPath $logFilePath -InputObject $Message -Append
}

function Main()
{
	Write-DebugLog -Message "Starting script using parameters: QueueManager=$QueueManager; QueueName=$QueueName; DisplayParameter=$DisplayParameter"
	# Is QueueName provided?
	if ($QueueName)
	{
		# Verify Length
		if ($QueueName.Length -gt 0)
		{
			$queueNames = $QueueName
		}
	} else {
		# No QueueName provided, gather all locally available
		$queueNames = Get-MQQueueNames -QueueManager $QueueManager
	}

	# Initiate MOM.ScriptAPI-objects for the property bags
	$omApi = New-Object -ComObject "MOM.ScriptApi"

	foreach ($queueName in $queueNames)
	{
		Write-DebugLog -Message "Checking Queue: $queueName"


		# prepare array with relevant counters
		$displayParameters = @(
			"CURDEPTH",
			"IPPROCS",
			"OPPROCS",
			"SESSIONS"
		)
		# loop through counters, return values in PB
		foreach ($DisplayParameter in $displayParameters) {
			# execute "display <DisplayParameter>(<queueName>) | runmqsc <QueueManager>"
			$displayResult = Invoke-MQDisplayQueue -QueueManager $QueueManager -QueueName $queueName -DisplayParameter $DisplayParameter
			# extract performance data
			$perfData = Get-MQPerfdataFromCmd -CommandResult $displayResult -DisplayParameter $DisplayParameter

			if ($perfData) {
				# Create property bag object and populate values
				$omPb = $omApi.CreatePropertyBag()
				$omPb.AddValue("Value", $perfData)
				$omPb.AddValue("Object", $QueueManager)
				$omPb.AddValue("Instance", $queueName)
				$omPb.AddValue("Counter", $DisplayParameter)

				Write-DebugLog -Message "$DisplayParameter on $QueueManager/$queueName = $perfData"

				# Return property bag to workflow
				$omPb
			}
		}
	}
}
Main]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>QueueManager</Name>
                    <Value>$Config/QueueManager$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>DisplayParameter</Name>
                    <Value>$Config/DisplayParameter$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Script" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="IBM.MQ.Queue.Perf.MonitorType" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Ok" />
          <MonitorTypeState ID="Warning" />
          <MonitorTypeState ID="Error" />
        </MonitorTypeStates>
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element name="WarningThreshold" type="xsd:double" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="ErrorThreshold" type="xsd:double" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="QueueManager" type="NonNullString" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="QueueName" type="xsd:string" minOccurs="0" maxOccurs="1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="DisplayParameter" type="NonNullString" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="WarningThreshold" ParameterType="double" Selector="$Config/WarningThreshold$" />
          <OverrideableParameter ID="ErrorThreshold" ParameterType="double" Selector="$Config/ErrorThreshold$" />
          <OverrideableParameter ID="TimeoutSeconds" ParameterType="int" Selector="$Config/TimeoutSeconds$" />
          <OverrideableParameter ID="IntervalSeconds" ParameterType="int" Selector="$Config/IntervalSeconds$" />
          <OverrideableParameter ID="SyncTime" ParameterType="string" Selector="$Config/SyncTime$" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="PropertyBag" TypeID="IBM.MQ.Queue.TimedPerfPropertyBag">
              <QueueManager>$Config/QueueManager$</QueueManager>
              <QueueName>$Config/QueueName$</QueueName>
              <DisplayParameter>$Config/DisplayParameter$</DisplayParameter>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
            </DataSource>
            <ConditionDetection ID="OkFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='Value']</XPathQuery>
                  </ValueExpression>
                  <Operator>Less</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/WarningThreshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="WarningFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Double">Property[@Name='Value']</XPathQuery>
                      </ValueExpression>
                      <Operator>GreaterEqual</Operator>
                      <ValueExpression>
                        <Value Type="Double">$Config/WarningThreshold$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Double">Property[@Name='Value']</XPathQuery>
                      </ValueExpression>
                      <Operator>Less</Operator>
                      <ValueExpression>
                        <Value Type="Double">$Config/ErrorThreshold$</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="ErrorFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Double">Property[@Name='Value']</XPathQuery>
                  </ValueExpression>
                  <Operator>GreaterEqual</Operator>
                  <ValueExpression>
                    <Value Type="Double">$Config/ErrorThreshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Ok">
              <Node ID="OkFilter">
                <Node ID="PropertyBag" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Warning">
              <Node ID="WarningFilter">
                <Node ID="PropertyBag" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Error">
              <Node ID="ErrorFilter">
                <Node ID="PropertyBag" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Categories>
    <Category ID="Cat.IBM.MQ.QueueManager16" Target="IBM.MQ.QueueManager16" Value="System!System.Internal.ManagementPack.Images.u16x16Icon" />
    <Category ID="Cat.IBM.MQ.QueueManager80" Target="IBM.MQ.QueueManager80" Value="System!System.Internal.ManagementPack.Images.DiagramIcon" />
  </Categories>
  <Monitoring>
    <Discoveries>
      <Discovery ID="IBM.MQ.ChannelDiscovery" Enabled="true" Target="IBM.MQ.QueueManager" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="IBM.MQ.Channel">
            <Property TypeID="IBM.MQ.Channel" PropertyID="ChannelName" />
            <Property TypeID="IBM.MQ.Channel" PropertyID="QueueManagerName" />
            <Property TypeID="System!System.Entity" PropertyID="DisplayName" />
            <Property TypeID="IBM.MQ.Channel" PropertyID="CHLTYPE" />
            <Property TypeID="IBM.MQ.Channel" PropertyID="BATCHSZ" />
            <Property TypeID="IBM.MQ.Channel" PropertyID="DESCR" />
            <Property TypeID="IBM.MQ.Channel" PropertyID="MAXMSGL" />
            <Property TypeID="IBM.MQ.Channel" PropertyID="NPMSPEED" />
            <Property TypeID="IBM.MQ.Channel" PropertyID="SSLCAUTH" />
            <Property TypeID="IBM.MQ.Channel" PropertyID="TRPTYPE" />
            <Property TypeID="IBM.MQ.Channel" PropertyID="USEDLQ" />
          </DiscoveryClass>
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.DiscoveryProvider">
          <IntervalSeconds>864000</IntervalSeconds>
          <SyncTime />
          <ScriptName>discoverChannel.vbs</ScriptName>
          <Arguments>$MPElement$ $Target/Id$ $Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$ $Target/Property[Type="IBM.MQ.QueueManager"]/QueueManagerName$</Arguments>
          <ScriptBody><![CDATA[
Dim oAPI

Dim oArgs
Set oArgs = WScript.Arguments
' Check for the required script arguments.
if oArgs.Count < 2 Then
' If the script is called without the required arguments,
' create an information event and then quit.
Call oAPI.LogScriptEvent("discoverChannel.vbs",101,0, _
"script was called with fewer than three arguments and was not executed.")
Wscript.Quit -1
End If


Dim SourceID, ManagedEntityId, TargetComputer, QueueManagerName

SourceId = oArgs(0) ' The GUID of the discovery object that launched the script.
ManagedEntityId = oArgs(1) ' The GUID of the computer class targeted by the script.
TargetComputer = oArgs(2) ' The FQDN of the computer targeted by the script.
QueueManagerName = oArgs(3)

Set oAPI = CreateObject("MOM.ScriptAPI")
Dim oDiscoveryData, oInst
Set oDiscoveryData = oAPI.CreateDiscoveryData(0, SourceId, ManagedEntityId)

Set objShell = WScript.CreateObject("WScript.Shell")
QueueCommand = "cmd /c echo Display channel(*) | runmqsc " & QueueManagerName
Set objExecObject = objShell.Exec(QueueCommand)

Do While Not objExecObject.StdOut.AtEndOfStream

QueueText = objExecObject.StdOut.ReadLine()

IF INSTR(QueueText, "CHANNEL(") THEN
MQTextArray = split(QueueText,")")
ChannelName = Trim(Replace(MQTextArray(0),"CHANNEL(",""))

' Discovered the application. Create the application instance.
Set oInst = oDiscoveryData.CreateClassInstance("$MPElement[Name='IBM.MQ.Channel']$")
' Define the property values for this instance. Available
' properties are determined by the Management Pack that
' defines the class.

Call oInst.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", TargetComputer)
Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Channel']/ChannelName$",ChannelName)
Call oInst.AddProperty("$MPElement[Name='IBM.MQ.QueueManager']/QueueManagerName$", QueueManagerName)
Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Channel']/QueueManagerName$", QueueManagerName)
Call oInst.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", ChannelName)


Call oDiscoveryData.AddInstance(oInst)

' Submit the discovery data for processing.
Call oAPI.LogScriptEvent("discoverQueue.vbs",10011,0,"New Channel: " & ChannelName & " Added to Discovery")

END IF

Loop

Call oAPI.Return(oDiscoveryData)

Set oDiscoveryData = nothing
Set oAPI = nothing
]]></ScriptBody>
          <TimeoutSeconds>300</TimeoutSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="IBM.MQ.DiscoverQueueProperties" Enabled="false" Target="IBM.MQ.Queue" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="IBM.MQ.Queue">
            <Property TypeID="IBM.MQ.Queue" PropertyID="TYPE" />
            <Property TypeID="IBM.MQ.Queue" PropertyID="DESCR" />
            <Property TypeID="IBM.MQ.Queue" PropertyID="MAXDEPTH" />
            <Property TypeID="IBM.MQ.Queue" PropertyID="MAXMSGL" />
          </DiscoveryClass>
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.DiscoveryProvider">
          <IntervalSeconds>864000</IntervalSeconds>
          <SyncTime />
          <ScriptName>DiscoverQueueProperties.vbs</ScriptName>
          <Arguments>$MPElement$ $Target/Id$ $Target/Host/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$ $Target/Property[Type="IBM.MQ.Queue"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Queue"]/QueueName$</Arguments>
          <ScriptBody><![CDATA[Dim oAPI
Dim oArgs
Set oArgs = WScript.Arguments
' Check for the required script arguments.


FUNCTION getMqProperty(mqType, pName, Property, queueMgr)
    Set objShell = WScript.CreateObject("WScript.Shell")
    QueueCommand = "cmd /c echo Display " & mqType & "(" & pName & ") " & Property & " | runmqsc " & queueMgr
    Set objExecObject = objShell.Exec(QueueCommand)
    Do While Not objExecObject.StdOut.AtEndOfStream
        QueryText = objExecObject.StdOut.ReadLine()
        IF INSTR(QueryText,Property & "(") THEN
            MqProperty = QueryText
            MqPropertyArray = split(MqProperty, Property & "(")
            MqPropertyArray2 = split(MqPropertyArray(1),")")
            getMqProperty = MqPropertyArray2(0)
            Exit Do
        END IF
    Loop
END Function


Dim QueueManagerName

SourceId = oArgs(0) ' The GUID of the discovery object that launched the script.
ManagedEntityId = oArgs(1) ' The GUID of the computer class targeted by the script.
TargetComputer = oArgs(2) ' The FQDN of the computer targeted by the script.
QueueManagerName = oArgs(3)
QueueName = oArgs(4)

Set oAPI = CreateObject("MOM.ScriptAPI")
Dim oDiscoveryData, oInst
Set oDiscoveryData = oAPI.CreateDiscoveryData(0, SourceId, ManagedEntityId)


' Discovered the application. Create the application instance.
Set oInst = oDiscoveryData.CreateClassInstance("$MPElement[Name='IBM.MQ.Queue']$")
' Define the property values for this instance. Available
' properties are determined by the Management Pack that
' defines the class.

Call oInst.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", TargetComputer)
Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Queue']/QueueName$",QueueName)
Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Queue']/QueueManagerName$", QueueManagerName)
Call oInst.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", QueueName)

' Discover Properties
Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Queue']/TYPE$", getMqProperty("Queue", QueueName, "TYPE", QueueManagerName))
Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Queue']/DESCR$", getMqProperty("Queue", QueueName, "DESCR", QueueManagerName))
Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Queue']/MAXDEPTH$", getMqProperty("Queue", QueueName, "MAXDEPTH", QueueManagerName))
Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Queue']/MAXMSGL$", getMqProperty("Queue", QueueName, "MAXMSGL", QueueManagerName))

Call oDiscoveryData.AddInstance(oInst)
Call oAPI.Return(oDiscoveryData)

Set oDiscoveryData = nothing
Set oAPI = nothing
]]></ScriptBody>
          <TimeoutSeconds>60</TimeoutSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="IBM.MQ.ListenerDiscovery" Enabled="true" Target="IBM.MQ.QueueManager" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="IBM.MQ.Listener">
            <Property TypeID="IBM.MQ.Listener" PropertyID="ListenerName" />
            <Property TypeID="IBM.MQ.Listener" PropertyID="QueueManagerName" />
            <Property TypeID="System!System.Entity" PropertyID="DisplayName" />
            <Property TypeID="IBM.MQ.Listener" PropertyID="TRPTYPE" />
            <Property TypeID="IBM.MQ.Listener" PropertyID="CONTROL" />
            <Property TypeID="IBM.MQ.Listener" PropertyID="PORT" />
            <Property TypeID="IBM.MQ.Listener" PropertyID="DESCR" />
            <Property TypeID="IBM.MQ.Listener" PropertyID="IPADDR" />
          </DiscoveryClass>
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.DiscoveryProvider">
          <IntervalSeconds>864000</IntervalSeconds>
          <SyncTime />
          <ScriptName>discoverListener.vbs</ScriptName>
          <Arguments>$MPElement$ $Target/Id$ $Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$ $Target/Property[Type="IBM.MQ.QueueManager"]/QueueManagerName$</Arguments>
          <ScriptBody><![CDATA[Dim oAPI

Dim oArgs
Set oArgs = WScript.Arguments
' Check for the required script arguments.
if oArgs.Count < 2 Then
    ' If the script is called without the required arguments,
    ' create an information event and then quit.
    Call oAPI.LogScriptEvent("discoverListener.vbs",101,0, _
        "script was called with fewer than three arguments and was not executed.")
    Wscript.Quit -1
End If

Dim SourceID, ManagedEntityId, TargetComputer, QueueManagerName

SourceId = oArgs(0) ' The GUID of the discovery object that launched the script.
ManagedEntityId = oArgs(1) ' The GUID of the computer class targeted by the script.
TargetComputer = oArgs(2) ' The FQDN of the computer targeted by the script.
QueueManagerName = oArgs(3)

Set oAPI = CreateObject("MOM.ScriptAPI")
Dim oDiscoveryData, oInst
Set oDiscoveryData = oAPI.CreateDiscoveryData(0, SourceId, ManagedEntityId)

Set objShell = WScript.CreateObject("WScript.Shell")
QueueCommand = "cmd /c echo Display listener(*) | runmqsc " & QueueManagerName
Set objExecObject = objShell.Exec(QueueCommand)

Do While Not objExecObject.StdOut.AtEndOfStream
    QueueText = objExecObject.StdOut.ReadLine()

    IF INSTR(QueueText, "LISTENER(") THEN
        MQTextArray = split(QueueText,")")
        ListenerName= Trim(Replace(MQTextArray(0),"LISTENER(",""))

        ' Discovered the application. Create the application instance.
        Set oInst = oDiscoveryData.CreateClassInstance("$MPElement[Name='IBM.MQ.Listener']$")
        ' Define the property values for this instance. Available
        ' properties are determined by the Management Pack that
        ' defines the class.

        Call oInst.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", TargetComputer)
        Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Listener']/ListenerName$", ListenerName)
        Call oInst.AddProperty("$MPElement[Name='IBM.MQ.QueueManager']/QueueManagerName$", QueueManagerName)
        Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Listener']/QueueManagerName$", QueueManagerName)
        Call oInst.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", ListenerName)


        Call oDiscoveryData.AddInstance(oInst)

        ' Submit the discovery data for processing.
        Call oAPI.LogScriptEvent("discoverListener.vbs",10011,0,"Listener: " & ListenerName & " Added to Discovery")

    END IF
Loop

Call oAPI.Return(oDiscoveryData)

Set oDiscoveryData = nothing
Set oAPI = nothing
]]></ScriptBody>
          <TimeoutSeconds>300</TimeoutSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="IBM.MQ.QueueDiscovery" Enabled="true" Target="IBM.MQ.QueueManager" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="IBM.MQ.Queue">
            <Property TypeID="IBM.MQ.Queue" PropertyID="QueueName" />
            <Property TypeID="IBM.MQ.Queue" PropertyID="QueueManagerName" />
            <Property TypeID="System!System.Entity" PropertyID="DisplayName" />
          </DiscoveryClass>
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.DiscoveryProvider">
          <IntervalSeconds>864000</IntervalSeconds>
          <SyncTime />
          <ScriptName>discoverQueue.vbs</ScriptName>
          <Arguments>$MPElement$ $Target/Id$ $Target/Host/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$ $Target/Property[Type="IBM.MQ.QueueManager"]/QueueManagerName$</Arguments>
          <ScriptBody><![CDATA[Dim oAPI
Dim oArgs
Set oArgs = WScript.Arguments
' Check for the required script arguments.
if oArgs.Count < 2 Then
    ' If the script is called without the required arguments,
    ' create an information event and then quit.
    Call oAPI.LogScriptEvent("discoverQueue.vbs",101,0, _
        "script was called with fewer than three arguments and was not executed.")
    Wscript.Quit -1
End If

Dim SourceID, ManagedEntityId, TargetComputer, QueueManagerName

SourceId = oArgs(0) ' The GUID of the discovery object that launched the script.
ManagedEntityId = oArgs(1) ' The GUID of the computer class targeted by the script.
TargetComputer = oArgs(2) ' The FQDN of the computer targeted by the script.
QueueManagerName = oArgs(3)

Set oAPI = CreateObject("MOM.ScriptAPI")
Dim oDiscoveryData, oInst
Set oDiscoveryData = oAPI.CreateDiscoveryData(0, SourceId, ManagedEntityId)

Set objShell = WScript.CreateObject("WScript.Shell")
QueueCommand = "cmd /c echo Display QL(*) | runmqsc " & QueueManagerName
Set objExecObject = objShell.Exec(QueueCommand)

Do While Not objExecObject.StdOut.AtEndOfStream
    QueueText = objExecObject.StdOut.ReadLine()

    IF INSTR(QueueText, "QUEUE(") THEN
        MQTextArray = split(QueueText,")")
        QueueName = Trim(Replace(MQTextArray(0),"QUEUE(",""))

        ' Discovered the application. Create the application instance.
        Set oInst = oDiscoveryData.CreateClassInstance("$MPElement[Name='IBM.MQ.Queue']$")
        ' Define the property values for this instance. Available
        ' properties are determined by the Management Pack that
        ' defines the class.

        Call oInst.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", TargetComputer)
        Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Queue']/QueueName$",QueueName)
        Call oInst.AddProperty("$MPElement[Name='IBM.MQ.QueueManager']/QueueManagerName$", QueueManagerName)
        Call oInst.AddProperty("$MPElement[Name='IBM.MQ.Queue']/QueueManagerName$", QueueManagerName)
        Call oInst.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", QueueName)

        Call oDiscoveryData.AddInstance(oInst)

        ' Submit the discovery data for processing.
        Call oAPI.LogScriptEvent("discoverQueue.vbs",10011,0,"New Queue: " & QueueName & " Added to Discovery")
    END IF
Loop

Call oAPI.Return(oDiscoveryData)

Set oDiscoveryData = nothing
Set oAPI = nothing

]]></ScriptBody>
          <TimeoutSeconds>60</TimeoutSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="IBM.MQ.QueueManagerDiscovery" Enabled="true" Target="IBM.MQ.Server" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="IBM.MQ.QueueManager">
            <Property TypeID="IBM.MQ.QueueManager" PropertyID="QueueManagerName" />
            <Property TypeID="System!System.Entity" PropertyID="DisplayName" />
          </DiscoveryClass>
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.DiscoveryProvider">
          <IntervalSeconds>864000</IntervalSeconds>
          <SyncTime />
          <ScriptName>discoverQueueManager.vbs</ScriptName>
          <Arguments>$MPElement$ $Target/Id$ $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Arguments>
          <ScriptBody>
            Dim oAPI


            Dim oArgs
            Set oArgs = WScript.Arguments
            ' Check for the required script arguments.
            if oArgs.Count &lt; 3 Then
            ' If the script is called without the required arguments,
            ' create an information event and then quit.
            Call oAPI.LogScriptEvent("DiscoverMqManager.vbs",101,0, _
            "script was called with fewer than three arguments and was not executed.")
            Wscript.Quit -1
            End If

            Dim SourceID, ManagedEntityId, TargetComputer

            SourceId = oArgs(0) ' The GUID of the discovery object that launched the script.
            ManagedEntityId = oArgs(1) ' The GUID of the computer class targeted by the script.
            TargetComputer = oArgs(2) ' The FQDN of the computer targeted by the script.

            Set oAPI = CreateObject("MOM.ScriptAPI")
            Dim oDiscoveryData, oInst
            Set oDiscoveryData = oAPI.CreateDiscoveryData(0, SourceId, ManagedEntityId)

            Set objShell = WScript.CreateObject("WScript.Shell")
            Set objExecObject = objShell.Exec("dspmq")

            Do While Not objExecObject.StdOut.AtEndOfStream

            MQText = objExecObject.StdOut.ReadLine()
            MQTextArray = split(MQText,")")
            MQName = Trim(Replace(MQTextArray(0),"QMNAME(",""))
            'wscript.echo MQName

            ' Discovered the application. Create the application instance.
            Set oInst = oDiscoveryData.CreateClassInstance("$MPElement[Name='IBM.MQ.QueueManager']$")

            ' Define the property values for this instance. Available
            ' properties are determined by the Management Pack that
            ' defines the class.
            Call oInst.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", TargetComputer)
            Call oInst.AddProperty("$MPElement[Name='IBM.MQ.QueueManager']/QueueManagerName$", MQName )
            Call oInst.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", MQName )

            Call oDiscoveryData.AddInstance(oInst)

            ' Submit the discovery data for processing.

            Loop

            Call oAPI.Return(oDiscoveryData)

            Set oDiscoveryData = nothing
            Set oAPI = nothing

          </ScriptBody>
          <TimeoutSeconds>300</TimeoutSeconds>
        </DataSource>
      </Discovery>
      <Discovery ID="IBM.MQ.Server.Discovery" Enabled="false" Target="Windows!Microsoft.Windows.Computer" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="IBM.MQ.Server" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>MQ_Service</AttributeName>
              <Path>SYSTEM\CurrentControlSet\services\MQSeriesServices</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>604800</Frequency>
          <ClassId>$MPElement[Name="IBM.MQ.Server"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Target/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Values/MQ_Service</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">true</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Rules>
      <Rule ID="IBM.MQ.ListenerSessionsCollection" Enabled="false" Target="IBM.MQ.Listener" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.PerformanceProvider">
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime />
            <ScriptName>CollectListenerSessions.vbs</ScriptName>
            <Arguments>$Target/Property[Type="IBM.MQ.Listener"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Listener"]/ListenerName$</Arguments>
            <ScriptBody><![CDATA[Dim oArgs
Set oArgs = WScript.Arguments
Dim QueueManagerName, QueueName
QueueManagerName= oArgs(0)
ListenerName = oArgs(1)

SESSIONS = 0

Set objShell = WScript.CreateObject("WScript.Shell")
QueueCommand = "cmd /c echo Display Listener(" & ListenerName & ") SESSIONS | runmqsc " & QueueManagerName
Set objExecObject = objShell.Exec(QueueCommand)

Do While Not objExecObject.StdOut.AtEndOfStream
    MQText = objExecObject.StdOut.ReadLine()
    IF INSTR(MQText,"SESSIONS(") THEN
     StatusArray =  Split(MQText, "SESSIONS(")
     SESSIONS = CDBL(TRIM(REPLACE(StatusArray(1),")","")))
    END IF
Loop

Dim oAPI, oBag
Set oAPI = CreateObject("MOM.ScriptAPI")
Set oBag = oAPI.CreatePropertyBag()
Call oBag.AddValue("PerfValue",SESSIONS)
Call oAPI.Return(oBag)]]></ScriptBody>
            <TimeoutSeconds>60</TimeoutSeconds>
            <ObjectName>Listener</ObjectName>
            <CounterName>SESSIONS</CounterName>
            <InstanceName>$Target/Property[Type="IBM.MQ.Listener"]/ListenerName$</InstanceName>
            <Value>$Data/Property[@Name='PerfValue']$</Value>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="IBM.MQ.IBM.MQ.Queue.SESSIONS.PerformanceCollection" Target="IBM.MQ.Queue" Enabled="true" ConfirmDelivery="false" Remotable="false" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="IBM.MQ.Queue.PerformanceDataMapper">
            <QueueManager>$Target/Property[Type='IBM.MQ.Queue']/QueueManagerName$</QueueManager>
            <QueueName>$Target/Property[Type='IBM.MQ.Queue']/QueueName$</QueueName>
            <DisplayParameter>SESSIONS</DisplayParameter>
            <TimeoutSeconds>30</TimeoutSeconds>
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime />
          </DataSource>
        </DataSources>
        <ConditionDetection ID="CD" TypeID="Performance!System.Performance.OptimizedCollectionFilter">
          <Tolerance>1</Tolerance>
          <ToleranceType>Absolute</ToleranceType>
          <MaximumSampleSeparation>10</MaximumSampleSeparation>
          <SamplingPeriodInSeconds>300</SamplingPeriodInSeconds>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="IBM.MQ.IBM.MQ.Queue.CURDEPTH.PerformanceCollection" Target="IBM.MQ.Queue" Enabled="true" ConfirmDelivery="false" Remotable="false" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="IBM.MQ.Queue.PerformanceDataMapper">
            <QueueManager>$Target/Property[Type='IBM.MQ.Queue']/QueueManagerName$</QueueManager>
            <QueueName>$Target/Property[Type='IBM.MQ.Queue']/QueueName$</QueueName>
            <DisplayParameter>CURDEPTH</DisplayParameter>
            <TimeoutSeconds>30</TimeoutSeconds>
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime />
          </DataSource>
        </DataSources>
        <ConditionDetection ID="CD" TypeID="Performance!System.Performance.OptimizedCollectionFilter">
          <Tolerance>1</Tolerance>
          <ToleranceType>Absolute</ToleranceType>
          <MaximumSampleSeparation>10</MaximumSampleSeparation>
          <SamplingPeriodInSeconds>300</SamplingPeriodInSeconds>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="IBM.MQ.IBM.MQ.Queue.IPPROCS.PerformanceCollection" Target="IBM.MQ.Queue" Enabled="true" ConfirmDelivery="false" Remotable="false" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="IBM.MQ.Queue.PerformanceDataMapper">
            <QueueManager>$Target/Property[Type='IBM.MQ.Queue']/QueueManagerName$</QueueManager>
            <QueueName>$Target/Property[Type='IBM.MQ.Queue']/QueueName$</QueueName>
            <DisplayParameter>IPPROCS</DisplayParameter>
            <TimeoutSeconds>30</TimeoutSeconds>
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime />
          </DataSource>
        </DataSources>
        <ConditionDetection ID="CD" TypeID="Performance!System.Performance.OptimizedCollectionFilter">
          <Tolerance>1</Tolerance>
          <ToleranceType>Absolute</ToleranceType>
          <MaximumSampleSeparation>10</MaximumSampleSeparation>
          <SamplingPeriodInSeconds>300</SamplingPeriodInSeconds>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="IBM.MQ.IBM.MQ.Queue.OPPROCS.PerformanceCollection" Target="IBM.MQ.Queue" Enabled="true" ConfirmDelivery="false" Remotable="false" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="IBM.MQ.Queue.PerformanceDataMapper">
            <QueueManager>$Target/Property[Type='IBM.MQ.Queue']/QueueManagerName$</QueueManager>
            <QueueName>$Target/Property[Type='IBM.MQ.Queue']/QueueName$</QueueName>
            <DisplayParameter>OPPROCS</DisplayParameter>
            <TimeoutSeconds>30</TimeoutSeconds>
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime />
          </DataSource>
        </DataSources>
        <ConditionDetection ID="CD" TypeID="Performance!System.Performance.OptimizedCollectionFilter">
          <Tolerance>1</Tolerance>
          <ToleranceType>Absolute</ToleranceType>
          <MaximumSampleSeparation>10</MaximumSampleSeparation>
          <SamplingPeriodInSeconds>300</SamplingPeriodInSeconds>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="CollectToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="CollectToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
    </Rules>
    <Monitors>
      <UnitMonitor ID="IBM.MQ.ChanneStatusMonitor" Accessibility="Internal" Enabled="false" Target="IBM.MQ.Channel" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.TimedScript.TwoStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="IBM.MQ.ChanneStatusMonitor_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='Status']$</AlertParameter1>
            <AlertParameter2>$Target/Property[Type="IBM.MQ.Channel"]/ChannelName$</AlertParameter2>
            <AlertParameter3>$Target/Property[Type="IBM.MQ.Channel"]/QueueManagerName$</AlertParameter3>
            <AlertParameter4>$Target/Host/Host/Property[Type="System!System.Entity"]/DisplayName$</AlertParameter4>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Success" MonitorTypeStateID="Success" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="Error" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>120</IntervalSeconds>
          <SyncTime />
          <ScriptName>ChannelStatusMonitor.vbs</ScriptName>
          <Arguments>$Target/Property[Type="IBM.MQ.Channel"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Channel"]/ChannelName$</Arguments>
          <ScriptBody><![CDATA[Dim oArgs
Set oArgs = WScript.Arguments
Dim QueueManagerName
QueueManagerName= oArgs(0)
ChannelName= oArgs(1)

Dim oAPI, oBag
Set oAPI = CreateObject("MOM.ScriptAPI")

Set objShell = WScript.CreateObject("WScript.Shell")

Status = "Not Available"

QueueCommand = "cmd /c echo Display chs(" & ChannelName & ") | runmqsc " & QueueManagerName
Set objExecObject = objShell.Exec(QueueCommand)

Do While Not objExecObject.StdOut.AtEndOfStream
MQText = objExecObject.StdOut.ReadLine()
IF INSTR(MQText,"STATUS(") THEN
StatusArray =  Split(MQText, "STATUS(")
StatusArray2 =  Split(StatusArray(1), ")")
Status = StatusArray2(0)
Exit do
END IF
Loop

'wscript.echo Status

Set oBag = oAPI.CreatePropertyBag()
Call oBag.AddValue("Status",Status)
Call oAPI.Return(oBag)
]]></ScriptBody>
          <TimeoutSeconds>120</TimeoutSeconds>
          <ErrorExpression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">RUNNING</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">INACTIVE</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">Not Available</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </ErrorExpression>
          <SuccessExpression>
            <Or>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">RUNNING</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">INACTIVE</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Not Available</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </Or>
          </SuccessExpression>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="IBM.MQ.ListenerStatusMonitor" Accessibility="Internal" Enabled="false" Target="IBM.MQ.Listener" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.TimedScript.TwoStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="IBM.MQ.ListenerStatusMonitor_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='Status']$</AlertParameter1>
            <AlertParameter2>$Target/Property[Type="IBM.MQ.Listener"]/ListenerName$</AlertParameter2>
            <AlertParameter3>$Target/Property[Type="IBM.MQ.Listener"]/QueueManagerName$</AlertParameter3>
            <AlertParameter4>$Target/Host/Host/Property[Type="System!System.Entity"]/DisplayName$</AlertParameter4>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Success" MonitorTypeStateID="Success" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="Error" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>120</IntervalSeconds>
          <SyncTime />
          <ScriptName>ListenerStatusMonitor.vbs</ScriptName>
          <Arguments>$Target/Property[Type="IBM.MQ.Listener"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Listener"]/ListenerName$</Arguments>
          <ScriptBody><![CDATA[Dim oArgs
Set oArgs = WScript.Arguments
Dim QueueManagerName
QueueManagerName= oArgs(0)
ListenerName= oArgs(1)

Status = "Not Available"

Dim oAPI, oBag
Set oAPI = CreateObject("MOM.ScriptAPI")
Set objShell = WScript.CreateObject("WScript.Shell")

QueueCommand = "cmd /c echo dis lsstatus(" & ListenerName & ") | runmqsc " & QueueManagerName
Set objExecObject = objShell.Exec(QueueCommand)

Do While Not objExecObject.StdOut.AtEndOfStream
MQText = objExecObject.StdOut.ReadLine()
IF INSTR(MQText,"STATUS(") THEN
StatusArray =  Split(MQText, "STATUS(")
StatusArray2 =  Split(StatusArray(1), ")")
Status = StatusArray2(0)
Exit do
END IF
Loop

Set oBag = oAPI.CreatePropertyBag()
Call oBag.AddValue("Status",Status)
Call oAPI.Return(oBag)]]></ScriptBody>
          <TimeoutSeconds>60</TimeoutSeconds>
          <ErrorExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
              </ValueExpression>
              <Operator>NotEqual</Operator>
              <ValueExpression>
                <Value Type="String">Running</Value>
              </ValueExpression>
            </SimpleExpression>
          </ErrorExpression>
          <SuccessExpression>
            <RegExExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
              </ValueExpression>
              <Operator>ContainsSubstring</Operator>
              <Pattern>Running</Pattern>
            </RegExExpression>
          </SuccessExpression>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="IBM.MQ.MQ_Installation1.ServiceMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Server" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="IBM.MQ.MQ_Installation1.ServiceMonitor_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>High</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" />
          <OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <ComputerName />
          <ServiceName>MQ_Installation1</ServiceName>
          <CheckStartupType />
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="IBM.MQ.QueueManagerStatusMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.TimedScript.TwoStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="IBM.MQ.QueueManagerStatusMonitor_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='Status']$</AlertParameter1>
            <AlertParameter2>$Target/Property[Type="IBM.MQ.QueueManager"]/QueueManagerName$</AlertParameter2>
            <AlertParameter3>$Target/Host/Property[Type="System!System.Entity"]/DisplayName$</AlertParameter3>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Success" MonitorTypeStateID="Success" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="Error" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>120</IntervalSeconds>
          <SyncTime />
          <ScriptName>QueueManagerStatusMonitor.vbs</ScriptName>
          <Arguments>$Target/Property[Type="IBM.MQ.QueueManager"]/QueueManagerName$</Arguments>
          <ScriptBody><![CDATA[Dim oArgs
Set oArgs = WScript.Arguments
Dim QueueManagerName
QueueManagerName= oArgs(0)

Dim oAPI, oBag
Set oAPI = CreateObject("MOM.ScriptAPI")

Status = "Not Available"

Set objShell = WScript.CreateObject("WScript.Shell")
Set objExecObject = objShell.Exec("dspmq -m "&QueueManagerName&" -s")

Do While Not objExecObject.StdOut.AtEndOfStream
MQText = objExecObject.StdOut.ReadLine()
IF INSTR(MQText,"STATUS(") THEN
StatusArray =  Split(MQText, "STATUS(")
Status = REPLACE(StatusArray(1),")","")
Exit do
END IF
Loop

Set oBag = oAPI.CreatePropertyBag()
Call oBag.AddValue("Status",Status)
Call oAPI.Return(oBag)]]></ScriptBody>
          <TimeoutSeconds>60</TimeoutSeconds>
          <ErrorExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
              </ValueExpression>
              <Operator>NotEqual</Operator>
              <ValueExpression>
                <Value Type="String">Running</Value>
              </ValueExpression>
            </SimpleExpression>
          </ErrorExpression>
          <SuccessExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">Running</Value>
              </ValueExpression>
            </SimpleExpression>
          </SuccessExpression>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="IBM.MQ.Queue.CURDEPTH.Perf.Monitor" Accessibility="Public" Enabled="true" Target="IBM.MQ.Queue" ParentMonitorID="Health!System.Health.PerformanceState" Remotable="false" Priority="Normal" TypeID="IBM.MQ.Queue.Perf.MonitorType" ConfirmDelivery="false">
        <Category>PerformanceHealth</Category>
        <AlertSettings AlertMessage="IBM.MQ.Queue.CURDEPTH.Perf.Monitor.AlertMessage">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>High</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name="Value"]$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Ok" MonitorTypeStateID="Ok" HealthState="Success" />
          <OperationalState ID="Warning" MonitorTypeStateID="Warning" HealthState="Warning" />
          <OperationalState ID="Error" MonitorTypeStateID="Error" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <WarningThreshold>2000</WarningThreshold>
          <ErrorThreshold>5000</ErrorThreshold>
          <QueueManager>$Target/Property[Type="IBM.MQ.Queue"]/QueueManagerName$</QueueManager>
          <QueueName>$Target/Property[Type="IBM.MQ.Queue"]/QueueName$</QueueName>
          <DisplayParameter>CURDEPTH</DisplayParameter>
          <TimeoutSeconds>60</TimeoutSeconds>
          <IntervalSeconds>600</IntervalSeconds>
          <SyncTime />
        </Configuration>
      </UnitMonitor>
      <DependencyMonitor ID="IBM.MQ.QueueManagerChannelsMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="IBM.MQ.QueueManagerHostingChannel" MemberMonitor="Health!System.Health.EntityState">
        <Category>Custom</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Error</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="IBM.MQ.QueueManagerListenersMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="IBM.MQ.QueueManagerHostingListener" MemberMonitor="Health!System.Health.EntityState">
        <Category>Custom</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Error</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="IBM.MQ.QueueManagerQueuesMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="IBM.MQ.QueueManagerHostingQueue" MemberMonitor="Health!System.Health.EntityState">
        <Category>Custom</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Error</MemberUnAvailable>
      </DependencyMonitor>
    </Monitors>
  </Monitoring>
  <Presentation>
    <Views>
      <View ID="IBM.MQ.ChannelPerformanceView" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Channel" TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.ChannelState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Channel" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.ListenersPerformance" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Listener" TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.ListenerState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Listener" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.QueueManagerState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.QueuePerformanceCollection" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Queue" TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.QueueState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Queue" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.ServerState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Server" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
    </Views>
    <Folders>
      <Folder ID="IBM.MQ.Channel.Folder" Accessibility="Internal" ParentFolder="IBM.MQ.Folder" />
      <Folder ID="IBM.MQ.Folder" Accessibility="Internal" ParentFolder="SC!Microsoft.SystemCenter.Monitoring.ViewFolder.Root" />
      <Folder ID="IBM.MQ.ListenerFolder" Accessibility="Internal" ParentFolder="IBM.MQ.Folder" />
      <Folder ID="IBM.MQ.QueuesFolder" Accessibility="Internal" ParentFolder="IBM.MQ.Folder" />
    </Folders>
    <FolderItems>
      <FolderItem ElementID="IBM.MQ.ChannelPerformanceView" Folder="IBM.MQ.Channel.Folder" ID="Id_0" />
      <FolderItem ElementID="IBM.MQ.ChannelState" Folder="IBM.MQ.Channel.Folder" ID="Id_1" />
      <FolderItem ElementID="IBM.MQ.ListenersPerformance" Folder="IBM.MQ.ListenerFolder" ID="Id_2" />
      <FolderItem ElementID="IBM.MQ.ListenerState" Folder="IBM.MQ.ListenerFolder" ID="Id_3" />
      <FolderItem ElementID="IBM.MQ.QueueManagerState" Folder="IBM.MQ.Folder" ID="Id_4" />
      <FolderItem ElementID="IBM.MQ.QueuePerformanceCollection" Folder="IBM.MQ.QueuesFolder" ID="Id_5" />
      <FolderItem ElementID="IBM.MQ.QueueState" Folder="IBM.MQ.QueuesFolder" ID="Id_6" />
      <FolderItem ElementID="IBM.MQ.ServerState" Folder="IBM.MQ.Folder" ID="Id_7" />
    </FolderItems>
    <ImageReferences>
      <ImageReference ElementID="IBM.MQ.Server" ImageID="IBM.MQ.QueueManager16" />
      <ImageReference ElementID="IBM.MQ.Server" ImageID="IBM.MQ.QueueManager80" />
    </ImageReferences>
    <StringResources>
      <StringResource ID="IBM.MQ.ChanneStatusMonitor_AlertMessageResourceID" />
      <StringResource ID="IBM.MQ.ListenerStatusMonitor_AlertMessageResourceID" />
      <StringResource ID="IBM.MQ.MQ_Installation1.ServiceMonitor_AlertMessageResourceID" />
      <StringResource ID="IBM.MQ.QueueManagerStatusMonitor_AlertMessageResourceID" />
      <StringResource ID="IBM.MQ.Queue.CURDEPTH.Perf.Monitor.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="IBM.MQ.Channel">
          <Name>Channel</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="BATCHSZ">
          <Name>BATCHSZ</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="ChannelName">
          <Name>Channel Name</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="CHLTYPE">
          <Name>CHLTYPE</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="DESCR">
          <Name>Description</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="MAXMSGL">
          <Name>MAXMSGL</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="NPMSPEED">
          <Name>NPMSPEED</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="QueueManagerName">
          <Name>Queue Manager Name</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="SSLCAUTH">
          <Name>SSLCAUTH</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="TRPTYPE">
          <Name>TRPTYPE</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel" SubElementID="USEDLQ">
          <Name>USEDLQ</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Listener">
          <Name>Listener</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Listener" SubElementID="CONTROL">
          <Name>CONTROL</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Listener" SubElementID="DESCR">
          <Name>Description</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Listener" SubElementID="IPADDR">
          <Name>IPADDR</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Listener" SubElementID="ListenerName">
          <Name>Listener Name</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Listener" SubElementID="PORT">
          <Name>PORT</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Listener" SubElementID="QueueManagerName">
          <Name>Queue Manager Name</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Listener" SubElementID="TRPTYPE">
          <Name>TRPTYPE</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue">
          <Name>Queue</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue" SubElementID="DESCR">
          <Name>Description</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue" SubElementID="MAXDEPTH">
          <Name>MAXDEPTH</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue" SubElementID="MAXMSGL">
          <Name>MAXMSGL</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue" SubElementID="QueueManagerName">
          <Name>Queue Manager Name</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue" SubElementID="QueueName">
          <Name>Queue Name</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue" SubElementID="TYPE">
          <Name>TYPE</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManager">
          <Name>Queue Manager</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManager" SubElementID="QueueManagerName">
          <Name>Queue Manager Name</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Server">
          <Name>IBM MQ Server</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ">
          <Name>IBM MQ</Name>
          <Description>
            Monitoring Pack for IBM WebSphere MQ.

Original Author: Mohammad Falah Damati - 25.7.2013

Adapted for customer environment by Samuel Tegenfeldt

          </Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel.Folder">
          <Name>Channels</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChannelDiscovery">
          <Name>Discover Channel</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChannelPerformanceView">
          <Name>Performance</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChannelState">
          <Name>Channels</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChanneStatusMonitor">
          <Name>Channel Status</Name>
          <Description>Monitor Channel Status</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChanneStatusMonitor" SubElementID="Error">
          <Name>Not Running</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChanneStatusMonitor" SubElementID="Success">
          <Name>Running or Inactive</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChanneStatusMonitor_AlertMessageResourceID">
          <Name>IBM MQ Channel Status</Name>
          <Description>
            IBM MQ Channel Status is not Running.

            Channel Status: {0}
            Channel Name: {1}
            Queue Manager Name: {2}
            Host Name:
            {3}
          </Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.DiscoverQueueProperties">
          <Name>DiscoverQueueProperties</Name>
          <Description>DiscoverQueueProperties</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Folder">
          <Name>IBM MQ</Name>
          <Description />
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerDiscovery">
          <Name>Discover Listener</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerFolder">
          <Name>Listeners</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerSessionsCollection">
          <Name>Sessions</Name>
          <Description>Collect number of session on Listener</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenersPerformance">
          <Name>Performance</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerState">
          <Name>Listeners</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerStatusMonitor">
          <Name>Status Monitor</Name>
          <Description>Monitor Listener Status Health</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerStatusMonitor" SubElementID="Error">
          <Name>Not Running</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerStatusMonitor" SubElementID="Success">
          <Name>Running</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerStatusMonitor_AlertMessageResourceID">
          <Name>IBM MQ Listener Status is Not Running</Name>
          <Description>
            IBM MQ Listener Status is not Running.

            Listener Status: {0}
            Listener Name: {1}
            Queue Manager Name: {2}
            Host Name: {3}
          </Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.MQ_Installation1.ServiceMonitor">
          <Name>MQ_Installation1 Service</Name>
          <Description>Monitor Windows Service (MQ_Installation1) Status</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.MQ_Installation1.ServiceMonitor" SubElementID="NotRunning">
          <Name>NotRunning</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.MQ_Installation1.ServiceMonitor" SubElementID="Running">
          <Name>Running</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.MQ_Installation1.ServiceMonitor_AlertMessageResourceID">
          <Name>MQ_Installation1 Service not running on $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$.</Name>
          <Description>IBM WebSphere MQ (Installation1) Service Not running on server {0}.</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueDiscovery">
          <Name>QueueDiscvoery</Name>
          <Description>discover Queues</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerChannelsMonitor">
          <Name>Channels Overall Health</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerDiscovery">
          <Name>Queue Manager Discovery</Name>
          <Description>Discover Queue Managers</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerListenersMonitor">
          <Name>Listeners Overall Health</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerQueuesMonitor">
          <Name>Queues Overall Health</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerState">
          <Name>Queue Managers</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerStatusMonitor">
          <Name>Status</Name>
          <Description>Monitor Queue Manager Status. dspmq -m &lt;QueueManagerName&gt; -s</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerStatusMonitor" SubElementID="Error">
          <Name>Error</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerStatusMonitor" SubElementID="Success">
          <Name>Success</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerStatusMonitor_AlertMessageResourceID">
          <Name>IBM Queue Manager Status is Not Running</Name>
          <Description>
            IBM Queue Manager Status is not Running.

            Status: {0}
            Queue Manager Name: {1}
            Host Name: {2}
          </Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueuePerformanceCollection">
          <Name>Performance</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueuesFolder">
          <Name>Queues</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueState">
          <Name>Queues</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Server.Discovery">
          <Name>IBM MQ Server Discovery</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ServerState">
          <Name>Server State</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.CURDEPTH.Perf.Monitor">
          <Name>Queue CURDEPTH Monitor</Name>
          <Description>Monitors the CURDEPTH value of the MQ Queue</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.CURDEPTH.Perf.Monitor.AlertMessage">
          <Name>CURDEPTH has exceeded threshold</Name>
          <Description>The Current Queue depth is above configured threshold.

Current Queue Depth: {0}</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.CURDEPTH.Perf.Monitor" SubElementID="Ok">
          <Name>Ok</Name>
          <Description>Ok</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.CURDEPTH.Perf.Monitor" SubElementID="Warning">
          <Name>Above Warning</Name>
          <Description>Above Warning</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.CURDEPTH.Perf.Monitor" SubElementID="Error">
          <Name>Above Error</Name>
          <Description>Above Error</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerHostingChannel">
          <Name>QueueManagerHostingChannel</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerHostingListener">
          <Name>QueueManagerHostingListener</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerHostingQueue">
          <Name>IBM MQ QueueManagerHostingQueue</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ServerHostingQueueManager">
          <Name>ServerHostingQueueManager</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.IBM.MQ.Queue.SESSIONS.PerformanceCollection">
          <Name>IBM MQ Queue - SESSIONS Performance Collection</Name>
          <Description>Collects SESSIONS statistics on MQ Queues</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.IBM.MQ.Queue.CURDEPTH.PerformanceCollection">
          <Name>IBM MQ Queue - CURDEPTH Performance Collection</Name>
          <Description>Collects CURDEPTH statistics on MQ Queues</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.IBM.MQ.Queue.IPPROCS.PerformanceCollection">
          <Name>IBM MQ Queue - IPPROCS Performance Collection</Name>
          <Description>Collects IPPROCS statistics on MQ Queues</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.IBM.MQ.Queue.OPPROCS.PerformanceCollection">
          <Name>IBM MQ Queue - OPPROCS Performance Collection</Name>
          <Description>Collects OPPROCS statistics on MQ Queues</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
  <Resources>
    <Image ID="IBM.MQ.QueueManager16" Accessibility="Internal" FileName="IBM.MQ.QueueManager16.png"></Image>
    <Image ID="IBM.MQ.QueueManager80" Accessibility="Public" FileName="IBM.MQ.QueueManager80.png"></Image>
  </Resources>
</ManagementPack>