<?xml version="1.0" encoding="utf-8"?>
<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Categories>
    <Category ID="Cat.IBM.MQ.QueueManager16" Target="IBM.MQ.QueueManager16" Value="System!System.Internal.ManagementPack.Images.u16x16Icon" />
    <Category ID="Cat.IBM.MQ.QueueManager80" Target="IBM.MQ.QueueManager80" Value="System!System.Internal.ManagementPack.Images.DiagramIcon" />
  </Categories>
  <Monitoring>
    <Rules>
      <Rule ID="IBM.MQ.ListenerSessionsCollection" Enabled="false" Target="IBM.MQ.Listener" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.PerformanceProvider">
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime />
            <ScriptName>CollectListenerSessions.vbs</ScriptName>
            <Arguments>$Target/Property[Type="IBM.MQ.Listener"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Listener"]/ListenerName$</Arguments>
            <ScriptBody>$IncludeFileContent/Scripts/CollectListenerSessions.vbs$</ScriptBody>
            <TimeoutSeconds>60</TimeoutSeconds>
            <ObjectName>Listener</ObjectName>
            <CounterName>SESSIONS</CounterName>
            <InstanceName>$Target/Property[Type="IBM.MQ.Listener"]/ListenerName$</InstanceName>
            <Value>$Data/Property[@Name='PerfValue']$</Value>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="IBM.MQ.Queue.CollectIPPROCS" Enabled="false" Target="IBM.MQ.Queue" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.PerformanceProvider">
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime />
            <ScriptName>CollectIPPROCS.vbs</ScriptName>
            <Arguments>$Target/Property[Type="IBM.MQ.Queue"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Queue"]/QueueName$</Arguments>
            <ScriptBody>
              Dim oArgs
              Set oArgs = WScript.Arguments
              Dim QueueManagerName, QueueName
              QueueManagerName= oArgs(0)
              QueueName = oArgs(1)

              IPPROCS = 0

              Set objShell = WScript.CreateObject("WScript.Shell")
              QueueCommand = "cmd /c echo Display Queue("&amp;QueueName&amp;") IPPROCS | runmqsc "&amp;QueueManagerName
              Set objExecObject = objShell.Exec(QueueCommand)

              Do While Not objExecObject.StdOut.AtEndOfStream
              MQText = objExecObject.StdOut.ReadLine()
              IF INSTR(MQText,"IPPROCS(") THEN
              StatusArray =  Split(MQText, "IPPROCS(")
              IPPROCS= CDBL(TRIM(REPLACE(StatusArray(1),")","")))
              END IF
              Loop

              Dim oAPI, oBag
              Set oAPI = CreateObject("MOM.ScriptAPI")
              Set oBag = oAPI.CreatePropertyBag()
              Call oBag.AddValue("PerfValue",IPPROCS)
              Call oAPI.Return(oBag)
            </ScriptBody>
            <TimeoutSeconds>60</TimeoutSeconds>
            <ObjectName>Queue</ObjectName>
            <CounterName>IPPROCS</CounterName>
            <InstanceName>$Target/Property[Type="IBM.MQ.Queue"]/QueueName$</InstanceName>
            <Value>$Data/Property[@Name='PerfValue']$</Value>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="IBM.MQ.Queue.CollectOPPROCS" Enabled="false" Target="IBM.MQ.Queue" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.PerformanceProvider">
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime />
            <ScriptName>CollectQueueOPPROCS.vbs</ScriptName>
            <Arguments>$Target/Property[Type="IBM.MQ.Queue"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Queue"]/QueueName$</Arguments>
            <ScriptBody>
              Dim oArgs
              Set oArgs = WScript.Arguments
              Dim QueueManagerName, QueueName
              QueueManagerName= oArgs(0)
              QueueName = oArgs(1)

              OPPROCS = 0

              Set objShell = WScript.CreateObject("WScript.Shell")
              QueueCommand = "cmd /c echo Display Queue("&amp;QueueName&amp;") OPPROCS | runmqsc "&amp;QueueManagerName
              Set objExecObject = objShell.Exec(QueueCommand)

              Do While Not objExecObject.StdOut.AtEndOfStream
              MQText = objExecObject.StdOut.ReadLine()
              IF INSTR(MQText,"OPPROCS(") THEN
              StatusArray =  Split(MQText, "OPPROCS(")
              OPPROCS= CDBL(TRIM(REPLACE(StatusArray(1),")","")))
              END IF
              Loop

              Dim oAPI, oBag
              Set oAPI = CreateObject("MOM.ScriptAPI")
              Set oBag = oAPI.CreatePropertyBag()
              Call oBag.AddValue("PerfValue",OPPROCS)
              Call oAPI.Return(oBag)
            </ScriptBody>
            <TimeoutSeconds>60</TimeoutSeconds>
            <ObjectName>Queue</ObjectName>
            <CounterName>OPPROCS</CounterName>
            <InstanceName>$Target/Property[Type="IBM.MQ.Queue"]/QueueName$</InstanceName>
            <Value>$Data/Property[@Name='PerfValue']$</Value>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
      <Rule ID="IBM.MQ.Queue.CURDEPTH" Enabled="false" Target="IBM.MQ.Queue" ConfirmDelivery="false" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedScript.PerformanceProvider">
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime />
            <ScriptName>CollectCURDEPTH.vbs</ScriptName>
            <Arguments>$Target/Property[Type="IBM.MQ.Queue"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Queue"]/QueueName$</Arguments>
            <ScriptBody>
              Dim oArgs
              Set oArgs = WScript.Arguments
              Dim QueueManagerName, QueueName
              QueueManagerName= oArgs(0)
              QueueName = oArgs(1)

              CURDEPTH = 0

              Set objShell = WScript.CreateObject("WScript.Shell")
              QueueCommand = "cmd /c echo Display Queue("&amp;QueueName&amp;") CURDEPTH| runmqsc "&amp;QueueManagerName
              Set objExecObject = objShell.Exec(QueueCommand)

              Do While Not objExecObject.StdOut.AtEndOfStream
              MQText = objExecObject.StdOut.ReadLine()
              IF INSTR(MQText,"CURDEPTH(") THEN
              StatusArray =  Split(MQText, "CURDEPTH(")
              CURDEPTH= CDBL(TRIM(REPLACE(StatusArray(1),")","")))
              END IF
              Loop

              Dim oAPI, oBag
              Set oAPI = CreateObject("MOM.ScriptAPI")
              Set oBag = oAPI.CreatePropertyBag()
              Call oBag.AddValue("PerfValue",CURDEPTH)
              Call oAPI.Return(oBag)
            </ScriptBody>
            <TimeoutSeconds>60</TimeoutSeconds>
            <ObjectName>Queue</ObjectName>
            <CounterName>CURDEPTH</CounterName>
            <InstanceName>$Target/Property[Type="IBM.MQ.Queue"]/QueueName$</InstanceName>
            <Value>$Data/Property[@Name='PerfValue']$</Value>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
    </Rules>
    <Monitors>
      <AggregateMonitor ID="IBM.MQ.Queue.DepthAndIPPROCS.Monitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Queue" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal">
        <Category>Custom</Category>
        <AlertSettings AlertMessage="IBM.MQ.Queue.DepthAndIPPROCS.Monitor_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Target/Property[Type="IBM.MQ.Queue"]/QueueName$</AlertParameter1>
            <AlertParameter2>$Target/Property[Type="IBM.MQ.Queue"]/QueueManagerName$</AlertParameter2>
          </AlertParameters>
        </AlertSettings>
        <Algorithm>BestOf</Algorithm>
      </AggregateMonitor>
      <UnitMonitor ID="IBM.MQ.ChanneStatusMonitor" Accessibility="Internal" Enabled="false" Target="IBM.MQ.Channel" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.TimedScript.TwoStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="IBM.MQ.ChanneStatusMonitor_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='Status']$</AlertParameter1>
            <AlertParameter2>$Target/Property[Type="IBM.MQ.Channel"]/ChannelName$</AlertParameter2>
            <AlertParameter3>$Target/Property[Type="IBM.MQ.Channel"]/QueueManagerName$</AlertParameter3>
            <AlertParameter4>$Target/Host/Host/Property[Type="System!System.Entity"]/DisplayName$</AlertParameter4>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Success" MonitorTypeStateID="Success" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="Error" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>120</IntervalSeconds>
          <SyncTime />
          <ScriptName>ChannelStatusMonitor.vbs</ScriptName>
          <Arguments>$Target/Property[Type="IBM.MQ.Channel"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Channel"]/ChannelName$</Arguments>
          <ScriptBody>
            Dim oArgs
            Set oArgs = WScript.Arguments
            Dim QueueManagerName
            QueueManagerName= oArgs(0)
            ChannelName= oArgs(1)

            Dim oAPI, oBag
            Set oAPI = CreateObject("MOM.ScriptAPI")

            Set objShell = WScript.CreateObject("WScript.Shell")

            Status = "Not Available"

            QueueCommand = "cmd /c echo Display chs("&amp;ChannelName&amp;") | runmqsc "&amp;QueueManagerName
            Set objExecObject = objShell.Exec(QueueCommand)

            Do While Not objExecObject.StdOut.AtEndOfStream
            MQText = objExecObject.StdOut.ReadLine()
            IF INSTR(MQText,"STATUS(") THEN
            StatusArray =  Split(MQText, "STATUS(")
            StatusArray2 =  Split(StatusArray(1), ")")
            Status = StatusArray2(0)
            Exit do
            END IF
            Loop

            'wscript.echo Status

            Set oBag = oAPI.CreatePropertyBag()
            Call oBag.AddValue("Status",Status)
            Call oAPI.Return(oBag)
          </ScriptBody>
          <TimeoutSeconds>120</TimeoutSeconds>
          <ErrorExpression>
            <And>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">RUNNING</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">INACTIVE</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>NotEqual</Operator>
                  <ValueExpression>
                    <Value Type="String">Not Available</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </And>
          </ErrorExpression>
          <SuccessExpression>
            <Or>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">RUNNING</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">INACTIVE</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="String">Not Available</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </Or>
          </SuccessExpression>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="IBM.MQ.ListenerStatusMonitor" Accessibility="Internal" Enabled="false" Target="IBM.MQ.Listener" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.TimedScript.TwoStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="IBM.MQ.ListenerStatusMonitor_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='Status']$</AlertParameter1>
            <AlertParameter2>$Target/Property[Type="IBM.MQ.Listener"]/ListenerName$</AlertParameter2>
            <AlertParameter3>$Target/Property[Type="IBM.MQ.Listener"]/QueueManagerName$</AlertParameter3>
            <AlertParameter4>$Target/Host/Host/Property[Type="System!System.Entity"]/DisplayName$</AlertParameter4>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Success" MonitorTypeStateID="Success" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="Error" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>120</IntervalSeconds>
          <SyncTime />
          <ScriptName>ListenerStatusMonitor.vbs</ScriptName>
          <Arguments>$Target/Property[Type="IBM.MQ.Listener"]/QueueManagerName$ $Target/Property[Type="IBM.MQ.Listener"]/ListenerName$</Arguments>
          <ScriptBody>
            Dim oArgs
            Set oArgs = WScript.Arguments
            Dim QueueManagerName
            QueueManagerName= oArgs(0)
            ListenerName= oArgs(1)

            Status = "Not Available"

            Dim oAPI, oBag
            Set oAPI = CreateObject("MOM.ScriptAPI")
            Set objShell = WScript.CreateObject("WScript.Shell")

            QueueCommand = "cmd /c echo dis lsstatus("&amp;ListenerName&amp;") | runmqsc "&amp;QueueManagerName
            Set objExecObject = objShell.Exec(QueueCommand)

            Do While Not objExecObject.StdOut.AtEndOfStream
            MQText = objExecObject.StdOut.ReadLine()
            IF INSTR(MQText,"STATUS(") THEN
            StatusArray =  Split(MQText, "STATUS(")
            StatusArray2 =  Split(StatusArray(1), ")")
            Status = StatusArray2(0)
            Exit do
            END IF
            Loop

            Set oBag = oAPI.CreatePropertyBag()
            Call oBag.AddValue("Status",Status)
            Call oAPI.Return(oBag)
          </ScriptBody>
          <TimeoutSeconds>60</TimeoutSeconds>
          <ErrorExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
              </ValueExpression>
              <Operator>NotEqual</Operator>
              <ValueExpression>
                <Value Type="String">Running</Value>
              </ValueExpression>
            </SimpleExpression>
          </ErrorExpression>
          <SuccessExpression>
            <RegExExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
              </ValueExpression>
              <Operator>ContainsSubstring</Operator>
              <Pattern>Running</Pattern>
            </RegExExpression>
          </SuccessExpression>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="IBM.MQ.MQ_Installation1.ServiceMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Server" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="IBM.MQ.MQ_Installation1.ServiceMonitor_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>High</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" />
          <OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <ComputerName />
          <ServiceName>MQ_Installation1</ServiceName>
          <CheckStartupType />
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="IBM.MQ.Queue.IPPROCS.Monitor" Accessibility="Internal" Enabled="false" Target="IBM.MQ.Queue" ParentMonitorID="IBM.MQ.Queue.DepthAndIPPROCS.Monitor" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.TimedScript.TwoStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <OperationalStates>
          <OperationalState ID="Success" MonitorTypeStateID="Success" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="Error" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>300</IntervalSeconds>
          <SyncTime />
          <ScriptName>MonitorIPPROCS.vbs</ScriptName>
          <Arguments />
          <ScriptBody>$IncludeFileContent/Scripts/MonitorIPPROCS.vbs$</ScriptBody>
          <SecureInput />
          <TimeoutSeconds>60</TimeoutSeconds>
          <ErrorExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='IPPROCS']</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">0</Value>
              </ValueExpression>
            </SimpleExpression>
          </ErrorExpression>
          <SuccessExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='IPPROCS']</XPathQuery>
              </ValueExpression>
              <Operator>Greater</Operator>
              <ValueExpression>
                <Value Type="String">0</Value>
              </ValueExpression>
            </SimpleExpression>
          </SuccessExpression>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="IBM.MQ.QueueManagerStatusMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.TimedScript.TwoStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="IBM.MQ.QueueManagerStatusMonitor_AlertMessageResourceID">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>Error</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='Status']$</AlertParameter1>
            <AlertParameter2>$Target/Property[Type="IBM.MQ.QueueManager"]/QueueManagerName$</AlertParameter2>
            <AlertParameter3>$Target/Host/Property[Type="System!System.Entity"]/DisplayName$</AlertParameter3>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Success" MonitorTypeStateID="Success" HealthState="Success" />
          <OperationalState ID="Error" MonitorTypeStateID="Error" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>120</IntervalSeconds>
          <SyncTime />
          <ScriptName>QueueManagerStatusMonitor.vbs</ScriptName>
          <Arguments>$Target/Property[Type="IBM.MQ.QueueManager"]/QueueManagerName$</Arguments>
          <ScriptBody>
            Dim oArgs
            Set oArgs = WScript.Arguments
            Dim QueueManagerName
            QueueManagerName= oArgs(0)

            Dim oAPI, oBag
            Set oAPI = CreateObject("MOM.ScriptAPI")

            Status = "Not Available"

            Set objShell = WScript.CreateObject("WScript.Shell")
            Set objExecObject = objShell.Exec("dspmq -m "&amp;QueueManagerName&amp;" -s")

            Do While Not objExecObject.StdOut.AtEndOfStream
            MQText = objExecObject.StdOut.ReadLine()
            IF INSTR(MQText,"STATUS(") THEN
            StatusArray =  Split(MQText, "STATUS(")
            Status = REPLACE(StatusArray(1),")","")
            Exit do
            END IF
            Loop

            Set oBag = oAPI.CreatePropertyBag()
            Call oBag.AddValue("Status",Status)
            Call oAPI.Return(oBag)
          </ScriptBody>
          <TimeoutSeconds>60</TimeoutSeconds>
          <ErrorExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
              </ValueExpression>
              <Operator>NotEqual</Operator>
              <ValueExpression>
                <Value Type="String">Running</Value>
              </ValueExpression>
            </SimpleExpression>
          </ErrorExpression>
          <SuccessExpression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Status']</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">Running</Value>
              </ValueExpression>
            </SimpleExpression>
          </SuccessExpression>
        </Configuration>
      </UnitMonitor>
      <DependencyMonitor ID="IBM.MQ.QueueManagerChannelsMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="IBM.MQ.QueueManagerHostingChannel" MemberMonitor="Health!System.Health.EntityState">
        <Category>Custom</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Error</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="IBM.MQ.QueueManagerListenersMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="IBM.MQ.QueueManagerHostingListener" MemberMonitor="Health!System.Health.EntityState">
        <Category>Custom</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Error</MemberUnAvailable>
      </DependencyMonitor>
      <DependencyMonitor ID="IBM.MQ.QueueManagerQueuesMonitor" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="IBM.MQ.QueueManagerHostingQueue" MemberMonitor="Health!System.Health.EntityState">
        <Category>Custom</Category>
        <Algorithm>WorstOf</Algorithm>
        <MemberUnAvailable>Error</MemberUnAvailable>
      </DependencyMonitor>
    </Monitors>
  </Monitoring>
  <ConfigurationGroups />
  <Templates />
  <PresentationTypes></PresentationTypes>
  <Presentation>
    <Views>
      <View ID="IBM.MQ.ChannelPerformanceView" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Channel" TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.ChannelState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Channel" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.ListenersPerformance" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Listener" TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.ListenerState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Listener" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.QueueManagerState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.QueueManager" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.QueuePerformanceCollection" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Queue" TypeID="SC!Microsoft.SystemCenter.PerformanceViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.QueueState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Queue" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="IBM.MQ.ServerState" Accessibility="Internal" Enabled="true" Target="IBM.MQ.Server" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
    </Views>
    <Folders>
      <Folder ID="IBM.MQ.Channel.Folder" Accessibility="Internal" ParentFolder="IBM.MQ.Folder" />
      <Folder ID="IBM.MQ.Folder" Accessibility="Internal" ParentFolder="SC!Microsoft.SystemCenter.Monitoring.ViewFolder.Root" />
      <Folder ID="IBM.MQ.ListenerFolder" Accessibility="Internal" ParentFolder="IBM.MQ.Folder" />
      <Folder ID="IBM.MQ.QueuesFolder" Accessibility="Internal" ParentFolder="IBM.MQ.Folder" />
    </Folders>
    <FolderItems>
      <FolderItem ElementID="IBM.MQ.ChannelPerformanceView" Folder="IBM.MQ.Channel.Folder" ID="Id_0" />
      <FolderItem ElementID="IBM.MQ.ChannelState" Folder="IBM.MQ.Channel.Folder" ID="Id_1" />
      <FolderItem ElementID="IBM.MQ.ListenersPerformance" Folder="IBM.MQ.ListenerFolder" ID="Id_2" />
      <FolderItem ElementID="IBM.MQ.ListenerState" Folder="IBM.MQ.ListenerFolder" ID="Id_3" />
      <FolderItem ElementID="IBM.MQ.QueueManagerState" Folder="IBM.MQ.Folder" ID="Id_4" />
      <FolderItem ElementID="IBM.MQ.QueuePerformanceCollection" Folder="IBM.MQ.QueuesFolder" ID="Id_5" />
      <FolderItem ElementID="IBM.MQ.QueueState" Folder="IBM.MQ.QueuesFolder" ID="Id_6" />
      <FolderItem ElementID="IBM.MQ.ServerState" Folder="IBM.MQ.Folder" ID="Id_7" />
    </FolderItems>
    <ImageReferences>
      <ImageReference ElementID="IBM.MQ.Server" ImageID="IBM.MQ.QueueManager16" />
      <ImageReference ElementID="IBM.MQ.Server" ImageID="IBM.MQ.QueueManager80" />
    </ImageReferences>
    <StringResources>
      <StringResource ID="IBM.MQ.ChanneStatusMonitor_AlertMessageResourceID" />
      <StringResource ID="IBM.MQ.ListenerStatusMonitor_AlertMessageResourceID" />
      <StringResource ID="IBM.MQ.MQ_Installation1.ServiceMonitor_AlertMessageResourceID" />
      <StringResource ID="IBM.MQ.Queue.DepthAndIPPROCS.Monitor_AlertMessageResourceID" />
      <StringResource ID="IBM.MQ.QueueManagerStatusMonitor_AlertMessageResourceID" />
    </StringResources>
  </Presentation>
  <Reporting />
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="IBM.MQ">
          <Name>IBM MQ</Name>
          <Description>
            <![CDATA[Monitoring Pack for IBM WebSphere MQ.

Original Author: Mohammad Falah Damati - 25.7.2013

Adapted for customer environment by Samuel Tegenfeldt
]]>
          </Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Channel.Folder">
          <Name>Channels</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChannelDiscovery">
          <Name>Discover Channel</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChannelPerformanceView">
          <Name>Performance</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChannelState">
          <Name>Channels</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChanneStatusMonitor">
          <Name>Channel Status</Name>
          <Description>Monitor Channel Status</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChanneStatusMonitor" SubElementID="Error">
          <Name>Not Running</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChanneStatusMonitor" SubElementID="Success">
          <Name>Running or Inactive</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ChanneStatusMonitor_AlertMessageResourceID">
          <Name>IBM MQ Channel Status</Name>
          <Description>
            IBM MQ Channel Status is not Running.

            Channel Status: {0}
            Channel Name: {1}
            Queue Manager Name: {2}
            Host Name:
            {3}
          </Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.DiscoverQueueProperties">
          <Name>DiscoverQueueProperties</Name>
          <Description>DiscoverQueueProperties</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Folder">
          <Name>IBM MQ</Name>
          <Description />
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerDiscovery">
          <Name>Discover Listener</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerFolder">
          <Name>Listeners</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerSessionsCollection">
          <Name>Sessions</Name>
          <Description>Collect number of session on Listener</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenersPerformance">
          <Name>Performance</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerState">
          <Name>Listeners</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerStatusMonitor">
          <Name>Status Monitor</Name>
          <Description>Monitor Listener Status Health</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerStatusMonitor" SubElementID="Error">
          <Name>Not Running</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerStatusMonitor" SubElementID="Success">
          <Name>Running</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ListenerStatusMonitor_AlertMessageResourceID">
          <Name>IBM MQ Listener Status is Not Running</Name>
          <Description>
            IBM MQ Listener Status is not Running.

            Listener Status: {0}
            Listener Name: {1}
            Queue Manager Name: {2}
            Host Name: {3}
          </Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.MQ_Installation1.ServiceMonitor">
          <Name>MQ_Installation1 Service</Name>
          <Description>Monitor Windows Service (MQ_Installation1) Status</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.MQ_Installation1.ServiceMonitor" SubElementID="NotRunning">
          <Name>NotRunning</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.MQ_Installation1.ServiceMonitor" SubElementID="Running">
          <Name>Running</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.MQ_Installation1.ServiceMonitor_AlertMessageResourceID">
          <Name>MQ_Installation1 Service not running on $Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$.</Name>
          <Description>IBM WebSphere MQ (Installation1) Service Not running on server {0}.</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.CollectIPPROCS">
          <Name>IPPROCS</Name>
          <Description>Number of Applications reading from this queue</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.CollectOPPROCS">
          <Name>OPPROCS</Name>
          <Description>Number of Applications writing on this queue</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.CURDEPTH">
          <Name>CURDEPTH</Name>
          <Description>Colelct Current Queue Depth</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.DepthAndIPPROCS.Monitor">
          <Name>Queue Depth and IPPROCS</Name>
          <Description>This monitor check on Queue Depth and Number applications Rading from it. if the queue depth is high and no applications are reading, then alert will be triggered.</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.DepthAndIPPROCS.Monitor_AlertMessageResourceID">
          <Name>IBM MQ Alert: Queue Depth and IPPROCS</Name>
          <Description>
            Queue depth is increasing while no messgaes being processed. find out detailed information of this monitor.

            Queue Name: {0}
            Queue Manager Name: {1}
          </Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.IPPROCS.Monitor">
          <Name>IPPROCS</Name>
          <Description>Monitor number of applications reading from this Queue</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.IPPROCS.Monitor" SubElementID="Error">
          <Name>Error</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Queue.IPPROCS.Monitor" SubElementID="Success">
          <Name>Success</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueDiscovery">
          <Name>QueueDiscvoery</Name>
          <Description>discover Queues</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerChannelsMonitor">
          <Name>Channels Overall Health</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerDiscovery">
          <Name>Queue Manager Discovery</Name>
          <Description>Discover Queue Managers</Description>
        </DisplayString>

        <DisplayString ElementID="IBM.MQ.QueueManagerListenersMonitor">
          <Name>Listeners Overall Health</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerQueuesMonitor">
          <Name>Queues Overall Health</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerState">
          <Name>Queue Managers</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerStatusMonitor">
          <Name>Status</Name>
          <Description>Monitor Queue Manager Status. dspmq -m &lt;QueueManagerName&gt; -s</Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerStatusMonitor" SubElementID="Error">
          <Name>Error</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerStatusMonitor" SubElementID="Success">
          <Name>Success</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueManagerStatusMonitor_AlertMessageResourceID">
          <Name>IBM Queue Manager Status is Not Running</Name>
          <Description>
            IBM Queue Manager Status is not Running.

            Status: {0}
            Queue Manager Name: {1}
            Host Name: {2}
          </Description>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueuePerformanceCollection">
          <Name>Performance</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueuesFolder">
          <Name>Queues</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.QueueState">
          <Name>Queues</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.Server.Discovery">
          <Name>IBM MQ Server Discovery</Name>
        </DisplayString>
        <DisplayString ElementID="IBM.MQ.ServerState">
          <Name>Server State</Name>
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks>
  <Resources>
    <Image ID="IBM.MQ.QueueManager16" Accessibility="Internal" FileName="IBM.MQ.QueueManager16.png"></Image>
    <Image ID="IBM.MQ.QueueManager80" Accessibility="Public" FileName="IBM.MQ.QueueManager80.png"></Image>
  </Resources>
</ManagementPackFragment>